package com.prisma.deeplearning

class LogisticRegression(val N:Int, val n_in:Int, val n_out:Int) {
  
  val W:Array[Array[Double]] = Array.ofDim[Double](n_out,n_in)
  val b:Array[Double] = new Array[Double](n_out)
  
  def train(x:Array[Int], y:Array[Int], lr:Double){
    val p_y_given_x:Array[Double] = new Array[Double](n_out)
    val dy:Array[Double] = new Array[Double](n_out)
    
    var i:Int = 0
    var j:Int = 0
    for(i<-0 until n_out){
      p_y_given_x(i) = 0
      for(j<- 0 until n_in){
        p_y_given_x(i) += W(i)(j)*x(j)
      }
      p_y_given_x(i) += b(i)
    }
    
  }
}